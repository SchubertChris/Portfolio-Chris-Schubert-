// src/styles/abstracts/_mixins.scss

//=====================================================
// LAYOUT & POSITIONIERUNG
//=====================================================

// Flexbox Mixins
@mixin flex($direction: row, $justify: flex-start, $align: flex-start, $wrap: nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
}

@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

@mixin flex-column {
    @include flex(column);
}

// Positionierung Mixins
@mixin absolute-fill {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin fixed-fill {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

// Sektion Mixins
@mixin section-padding {
    padding: 6rem 0;

    @media (max-width: $breakpoint-md) {
        padding: 4rem 0;
    }

    @media (max-width: $breakpoint-sm) {
        padding: 3rem 0;
    }
}

@mixin section-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;

    @media (max-width: $breakpoint-sm) {
        padding: 0 1rem;
    }
}

// Grid und Container
@mixin responsive-grid($min-width: 350px, $gap: 2rem) {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
    gap: $gap;
}

@mixin auto-grid($columns: 3, $gap: 2rem) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;

    @media (max-width: $breakpoint-lg) {
        grid-template-columns: repeat(min($columns, 2), 1fr);
    }

    @media (max-width: $breakpoint-md) {
        grid-template-columns: 1fr;
    }
}

//=====================================================
// VISUELLES & EFFEKTE
//=====================================================

// Neon-Effekte
@mixin neon-text($color: $primary, $glow-color: $primary-glow) {
    color: $color;
    text-shadow: 0 0 10px $glow-color;
    will-change: text-shadow;
}

@mixin neon-border($color: $primary, $glow-color: $primary-glow, $border-width: 2px) {
    border: $border-width solid $color;
    box-shadow: 0 0 15px $glow-color;
    will-change: box-shadow;
}

@mixin neon-glow($color: $primary, $glow-color: $primary-glow, $intensity: 1) {
    box-shadow: 
        0 0 5px $glow-color,
        0 0 10px $glow-color,
        0 0 #{15px * $intensity} $glow-color;
    will-change: box-shadow;
}

// Gradient Mixins
@mixin gradient-overlay($type: 'radial', $color: $primary, $opacity: 0.2) {
    @if $type == 'radial' {
        background: radial-gradient(circle at center, rgba($color, $opacity) 0%, rgba(0, 0, 0, 0.8) 70%);
    } @else if $type == 'linear' {
        background: linear-gradient(45deg, var(--background-dark) 0%, rgba(0, 0, 0, 0.7) 100%);
    }
}

@mixin text-gradient($start-color: $primary-light, $mid-color: $primary, $end-color: $primary-dark) {
    background: linear-gradient(to right, $start-color, $mid-color, $end-color);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
}

// Schattierungen
@mixin shadow($level: 1) {
    @if $level == 1 {
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    } @else if $level == 2 {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    } @else if $level == 3 {
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.4);
    }
}

//=====================================================
// TYPOGRAFIE
//=====================================================

@mixin font($size: base, $weight: normal, $family: $font-family-primary) {
    font-family: $family;
    @if $size == xs {
        font-size: $font-size-xs;
    } @else if $size == sm {
        font-size: $font-size-sm;
    } @else if $size == md {
        font-size: $font-size-md;
    } @else if $size == lg {
        font-size: $font-size-lg;
    } @else if $size == xl {
        font-size: $font-size-xl;
    } @else if $size == 2xl {
        font-size: $font-size-2xl;
    } @else if $size == 3xl {
        font-size: $font-size-3xl;
    } @else {
        font-size: $font-size-base;
    }
    font-weight: $weight;
}

@mixin heading($level: 1) {
    @if $level == 1 {
        @include font(3xl, bold);
        margin-bottom: 1.5rem;
    } @else if $level == 2 {
        @include font(2xl, bold);
        margin-bottom: 1.25rem;
    } @else if $level == 3 {
        @include font(xl, 600);
        margin-bottom: 1rem;
    } @else if $level == 4 {
        @include font(lg, 600);
        margin-bottom: 0.75rem;
    } @else {
        @include font(md, 600);
        margin-bottom: 0.5rem;
    }
}

@mixin section-title {
    font-size: $font-size-2xl;
    margin-bottom: 2rem;
    text-align: center;
    color: var(--primary);
    position: relative;
    display: inline-block;
    animation: textGlow 3s infinite;
    will-change: text-shadow;

    &::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 3px;
        background: linear-gradient(90deg, transparent, var(--primary), transparent);
    }

    @media (max-width: $breakpoint-md) {
        font-size: $font-size-xl;
    }
}

//=====================================================
// UI KOMPONENTEN
//=====================================================

// Button Mixins
@mixin button-base {
    padding: 0.8rem 2rem;
    font-size: $font-size-base;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-fast) ease;
    user-select: none;
    will-change: transform, box-shadow;
}

@mixin primary-button {
    @include button-base;
    background-color: var(--primary);
    color: var(--background-dark);
    border: none;
    @include neon-glow($primary, $primary-glow);
    
    &:hover {
        transform: translateY(-3px);
        @include neon-glow($primary, $primary-glow, 1.5);
    }
    
    &:active {
        transform: translateY(-1px);
    }

    &:disabled {
        opacity: 0.7;
        cursor: not-allowed;
        transform: none;
        box-shadow: none;
    }
}

@mixin secondary-button {
    @include button-base;
    background-color: transparent;
    color: var(--text-light);
    border: 2px solid var(--primary);
    
    &:hover {
        background-color: rgba($primary, 0.1);
        transform: translateY(-3px);
    }
    
    &:active {
        transform: translateY(-1px);
    }

    &:disabled {
        opacity: 0.7;
        cursor: not-allowed;
        transform: none;
    }
}

@mixin neon-button($bg-color: transparent, $text-color: $text-light, $border-color: $primary, $glow-color: $primary-glow) {
    @include button-base;
    background-color: $bg-color;
    color: $text-color;
    border: 2px solid $border-color;

    &:hover {
        box-shadow: 0 0 15px $glow-color;
        transform: translateY(-3px);
    }

    &:active {
        transform: translateY(-1px);
    }
}

// Card Mixins
@mixin card($bg-color: $background-dark-lighter) {
    background-color: $bg-color;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
    transition: all var(--transition-fast) ease;
    will-change: transform, box-shadow;
}

@mixin card-hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
}

// Form Mixins
@mixin form-input {
    width: 100%;
    padding: 0.8rem 1rem;
    background-color: var(--background-dark);
    border: 1px solid var(--background-dark-accent);
    border-radius: 8px;
    color: var(--text-light);
    font-size: $font-size-base;
    transition: all 0.3s ease;
    will-change: border-color, box-shadow;

    &:focus {
        border-color: var(--primary);
        box-shadow: 0 0 10px var(--primary-glow);
        outline: none;
    }

    &::placeholder {
        color: var(--text-light-muted);
        opacity: 0.7;
    }
}

@mixin form-label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-light);
    font-weight: 500;
}

// Skill-Bar Mixin
@mixin skill-bar($width: 100%, $color: $primary) {
    height: 8px;
    background-color: var(--background-dark-accent);
    border-radius: 4px;
    overflow: hidden;
    position: relative;

    .skill-level {
        height: 100%;
        width: $width;
        background: linear-gradient(90deg, color.adjust($color, $lightness: -15%), $color, color.adjust($color, $lightness: 15%));
        border-radius: 4px;
        animation: skillAnimation 1.5s ease forwards;
        transform-origin: left;
        transform: scaleX(0);
        will-change: transform;
    }
}

//=====================================================
// PROJEKTKOMPONENTEN
//=====================================================

// Project Card Mixins
@mixin project-card-hover {
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.4);
    .project-image, .card-image {
        .project-overlay, .card-overlay {
            opacity: 1;
        }
        img {
            transform: scale(1.1);
        }
    }
}

@mixin tech-tag($bg-color: var(--background-dark-accent), $text-color: var(--text-light)) {
    font-size: 0.8rem;
    padding: 0.3rem 0.8rem;
    background-color: $bg-color;
    color: $text-color;
    border-radius: 30px;
    transition: all 0.2s ease;
    &:hover {
        background-color: rgba(200, 162, 83, 0.2);
    }
}

//=====================================================
// ANIMATIONEN
//=====================================================

// Animation Mixins
@mixin keyframes($name) {
    @keyframes #{$name} {
        @content;
    }
}

@mixin animate($animation, $duration, $timing: ease, $delay: 0s, $iteration: 1, $direction: normal, $fill-mode: forwards) {
    animation: $animation $duration $timing $delay $iteration $direction $fill-mode;
    will-change: auto;
}

// Scroll-Reveal
@mixin reveal-base {
    opacity: 0;
    transition: opacity 0.8s ease, transform 0.8s ease;
    will-change: opacity, transform;

    &.revealed {
        opacity: 1;
        transform: translate(0);
    }
}

@mixin reveal-left {
    @include reveal-base;
    transform: translateX(-50px);
}

@mixin reveal-right {
    @include reveal-base;
    transform: translateX(50px);
}

@mixin reveal-up {
    @include reveal-base;
    transform: translateY(50px);
}

@mixin reveal-down {
    @include reveal-base;
    transform: translateY(-50px);
}

//=====================================================
// RESPONSIVE DESIGN
//=====================================================

// Media Queries
@mixin media-up($breakpoint) {
    @if $breakpoint == sm {
        @media (min-width: $breakpoint-sm) { @content; }
    } @else if $breakpoint == md {
        @media (min-width: $breakpoint-md) { @content; }
    } @else if $breakpoint == lg {
        @media (min-width: $breakpoint-lg) { @content; }
    } @else if $breakpoint == xl {
        @media (min-width: $breakpoint-xl) { @content; }
    }
}

@mixin media-down($breakpoint) {
    @if $breakpoint == sm {
        @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
    } @else if $breakpoint == md {
        @media (max-width: #{$breakpoint-md - 1px}) { @content; }
    } @else if $breakpoint == lg {
        @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
    } @else if $breakpoint == xl {
        @media (max-width: #{$breakpoint-xl - 1px}) { @content; }
    }
}

@mixin media-between($min, $max) {
    @media (min-width: $min) and (max-width: $max) { @content; }
}

// Responsive Utilities
@mixin hide-on-mobile {
    @media (max-width: $breakpoint-md) {
        display: none !important;
    }
}

@mixin hide-on-desktop {
    @media (min-width: $breakpoint-md) {
        display: none !important;
    }
}

//=====================================================
// ZUGÄNGLICHKEIT
//=====================================================

@mixin focus-visible {
    &:focus-visible {
        outline: 2px solid var(--primary);
        outline-offset: 2px;
    }
}

@mixin reduced-motion {
    @media (prefers-reduced-motion: reduce) {
        animation: none !important;
        transition: none !important;
    }
}