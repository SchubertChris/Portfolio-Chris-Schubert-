// src/styles/_mixins.scss

// Flexbox Mixins
@mixin flex($direction: row, $justify: flex-start, $align: flex-start, $wrap: nowrap) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
    flex-wrap: $wrap;
}

@mixin flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin flex-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

// Positionierung Mixins
@mixin absolute-fill {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Sektion Mixins
@mixin section-padding {
    padding: 6rem 0;

    @media (max-width: $breakpoint-md) {
        padding: 4rem 0;
    }
}

@mixin section-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
}

// Neon-Effekte
@mixin neon-text($color: $primary, $glow-color: $primary-glow) {
    color: $color;
    text-shadow: 0 0 10px $glow-color;
}

@mixin neon-border($color: $primary, $glow-color: $primary-glow) {
    border: 2px solid $color;
    box-shadow: 0 0 15px $glow-color;
}

@mixin neon-button($bg-color: transparent, $text-color: $text-light, $border-color: $primary, $glow-color: $primary-glow) {
    padding: 0.8rem 2rem;
    background-color: $bg-color;
    color: $text-color;
    border: 2px solid $border-color;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-fast) ease;

    &:hover {
        box-shadow: 0 0 15px $glow-color;
        transform: translateY(-3px);
    }

    &:active {
        transform: translateY(-1px);
    }
}

// Responsive Grid
@mixin responsive-grid($min-width: 350px, $gap: 2rem) {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
    gap: $gap;
}

// Media Queries
@mixin media-up($breakpoint) {
    @if $breakpoint ==sm {
        @media (min-width: $breakpoint-sm) {
            @content;
        }
    }

    @else if $breakpoint ==md {
        @media (min-width: $breakpoint-md) {
            @content;
        }
    }

    @else if $breakpoint ==lg {
        @media (min-width: $breakpoint-lg) {
            @content;
        }
    }

    @else if $breakpoint ==xl {
        @media (min-width: $breakpoint-xl) {
            @content;
        }
    }
}

@mixin media-down($breakpoint) {
    @if $breakpoint ==sm {
        @media (max-width: #{$breakpoint-sm - 1px}) {
            @content;
        }
    }

    @else if $breakpoint ==md {
        @media (max-width: #{$breakpoint-md - 1px}) {
            @content;
        }
    }

    @else if $breakpoint ==lg {
        @media (max-width: #{$breakpoint-lg - 1px}) {
            @content;
        }
    }

    @else if $breakpoint ==xl {
        @media (max-width: #{$breakpoint-xl - 1px}) {
            @content;
        }
    }
}

// Gradient Mixins
@mixin gradient-overlay($type: 'radial', $color: $primary, $opacity: 0.2) {
    @if $type =='radial' {
        background: radial-gradient(circle at center, rgba($color, $opacity) 0%, rgba(0, 0, 0, 0.8) 70%);
    }

    @else if $type =='linear' {
        background: linear-gradient(45deg, var(--background-dark) 0%, rgba(0, 0, 0, 0.7) 100%);
    }
}

// Animation Mixins
@mixin keyframes($name) {
    @keyframes #{$name} {
        @content;
    }
}

@mixin animate($animation, $duration, $timing: ease, $delay: 0s, $iteration: 1, $direction: normal, $fill-mode: forwards) {
    animation: $animation $duration $timing $delay $iteration $direction $fill-mode;
}

// Scroll-Reveal
@mixin reveal-base {
    opacity: 0;
    transition: opacity 0.8s ease, transform 0.8s ease;

    &.revealed {
        opacity: 1;
        transform: translate(0);
    }
}

@mixin reveal-left {
    @include reveal-base;
    transform: translateX(-50px);
}

@mixin reveal-right {
    @include reveal-base;
    transform: translateX(50px);
}

@mixin reveal-up {
    @include reveal-base;
    transform: translateY(50px);
}

@mixin reveal-down {
    @include reveal-base;
    transform: translateY(-50px);
}

// Skill-Bar Mixin
@mixin skill-bar($width: 100%) {
    height: 8px;
    background-color: var(--background-dark-accent);
    border-radius: 4px;
    overflow: hidden;

    .skill-level {
        height: 100%;
        width: $width;
        background: linear-gradient(90deg, var(--primary-dark), var(--primary), var(--primary-light));
        border-radius: 4px;
        animation: skillAnimation 1.5s ease forwards;
        transform-origin: left;
        transform: scaleX(0);
    }
}

// Card Mixin
@mixin card($bg-color: var(--background-dark-lighter)) {
    background-color: $bg-color;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
    transition: all var(--transition-fast) ease;
}